statepop
?usmap
??usmap
library(tidyverse)
library(fiftystater)
install.packages("usmap")
library(usmap)
statepop
install.packages("tidyverse")
install.packages("fiftystater")
library(tidyverse)
data("fifty states")
library(maps)
counties = map_data("county")
ggplot(data = counties, aes(x = long, y = lat)) + geom_polygon(aes(group = group, fill = group))
?map_data
ggplot(data = by_state, aes(x = State, y = Murders)) + geom_point()
gvisGeoChart(data = by_state, locationvar = State)
library(googleVis)
gvisGeoChart(data = by_state, locationvar = State)
gvisGeoChart(data = by_state)
knitr::opts_chunk$set(echo = TRUE)
head(billboard)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
billboard <- readr::read_csv("./data/billboard.csv")
head(billboard)
library(tidyr)
library(tidyverse)
head(table1)
head(table2)  #Messy data example #1
head(table3)  #Messy data example #2.
install.packages("tidyverse")
install.packages("tidyverse")
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
```{r, message=FALSE}
library(tidyverse)
library(tidyverse)
## Messy Data Type #1
```{r}
billboard <- readr::read_csv("./data/billboard.csv")
head(billboard)
```
## gather()
```{r}
billboard2 <- billboard %>%
gather(key="week", value="rank", wk1:wk76, na.rm = TRUE)
head(billboard2)
# The following code works the same
# billboard2 <- billboard %>%
#   gather(key="week", value="rank", -c(1:5), na.rm = TRUE)
```{r}
billboard2 <- billboard %>%
gather(key="week", value="rank", wk1:wk76, na.rm = TRUE)
head(billboard2)
str(billboard2)
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(week),
date = readr::parse_date(date.entered) + 7 * (week - 1)) %>%
select(-date.entered)
head(billboard3)
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(week),
date = readr::parse_date(date.entered) + 7 * (week - 1)) %>%
select(-date.entered)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
billboard <- readr::read_csv("./data/billboard.csv")
head(billboard)
View(billboard2)
?read.csv()
View(billboard)
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(week),
date = readr::parse_date(date.entered) + 7 * (week - 1)) %>%
select(-date.entered)
glimpse(billboard2)
?parse_number
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(as.character(week)),
date = readr::parse_date(date.entered) + 7 * (week - 1)) %>%
select(-date.entered)
billboard3 <- billboard2 %>%
billboard3 <- billboard2 %>%
billboard3 <- billboard2 %>%
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(week))# %>%
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(week)) # %>%
?parse_date
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(week),
date = readr::parse_date(date.entered, format = "%Y-$M-%D") + 7 * (week - 1)) %>%
select(-date.entered)
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(week),
date = date.entered + 7 * (week - 1)) %>%
select(-date.entered)
head(billboard3)
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(week),
date = date.entered + 7 * (week - 1)) #%>%
head(billboard3)
View(billboard3)
```{r}
weather <- readr::read_csv("./data/weather.csv")
head(weather)
weather2 <- weather %>%
gather(day, value, d1:d31, na.rm = TRUE) %>%
mutate(day=readr::parse_number(day))
head(weather2)
weather3 <- weather2 %>% spread(element, value)
head(weather3)
flights = readr::read_csv('./data/flights.csv')
flights = readr::read_csv('./data/flights.csv')
head(flights)
flights2 = separate(flights, route, c("origin", "dest"), sep = "-")
head(flights2)
?separate()
shiny::runApp('Desktop/NYCDSA/Projects/ShinyMurderApp')
#Import database
murder_database = fread(file = "~/Desktop/NYCDSA/Projects/ShinyMurderApp/data/database.csv", stringsAsFactors = T)
murder_database = murder_database %>%
mutate(., `Victim_Age_Category` =
ifelse(`Victim Age`<=9, "0-9",
ifelse(`Victim Age`<=19, "10-19",
ifelse(`Victim Age`<=29, "20-29",
ifelse(`Victim Age`<=39, "30-39",
ifelse(`Victim Age`<=49, "40-49",
ifelse(`Victim Age`<=59, "50-59",
ifelse(`Victim Age` <= 69, "60-69",
ifelse(`Victim Age` != 998, "70+", "Unknown")))))))))
View(murder_database)
##Segement dataset by year and solved state; calculate the total number of murders for each year for solved vs. unsolved murders
yearly_murders_by_solved_df =
murder_database %>%
mutate(., Year = as.factor(Year)) %>%
group_by(., Year, `Crime Solved`) %>%
summarise(., Murders = n()) %>%
spread(., key = `Crime Solved`, value = Murders)
View(yearly_murders_by_solved_df)
##Segement dataset by year and solved state; calculate the total number of murders for each year for solved vs. unsolved murders
yearly_murders_by_solved_df =
murder_database %>%
mutate(., Year = as.factor(Year)) %>%
group_by(., Year, `Crime Solved`) %>%
summarise(., Murders = n()) %>%
spread(., key = `Crime Solved`, value = Murders) %>%
select(., Murders, Yes, No)
View(yearly_murders_by_solved_df)
runApp('Desktop/NYCDSA/Projects/ShinyMurderApp')
yearly_murders_by_solved_df =
murder_database %>%
mutate(., Year = as.factor(Year)) %>%
group_by(., Year, `Crime Solved`) %>%
summarise(., Murders = n()) %>%
spread(., key = `Crime Solved`, value = Murders)
View(yearly_murders_by_solved_df)
yearly_murders_by_solved_df =
murder_database %>%
mutate(., Year = as.factor(Year)) %>%
group_by(., Year, `Crime Solved`) %>%
summarise(., Murders = n())
View(yearly_murders_by_solved_df)
?spread
##Segement dataset by year and solved state; calculate the total number of murders for each year for solved vs. unsolved murders
yearly_murders_by_solved_df =
murder_database %>%
mutate(., Year = as.factor(Year)) %>%
group_by(., Year, `Crime Solved`) %>%
summarise(., Murders = n()) %>%
spread(., key = `Crime Solved`, value = Murders) %>%
mutate(., Total = Yes + No) %>%
select(., Year, Yes, No, Total)
View(yearly_murders_by_solved_df)
##Segement dataset by year and solved state; calculate the total number of murders for each year for solved vs. unsolved murders
yearly_murders_by_solved_df =
murder_database %>%
mutate(., Year = as.factor(Year)) %>%
group_by(., Year, `Crime Solved`) %>%
summarise(., Murders = n()) %>%
spread(., key = `Crime Solved`, value = Murders) %>%
mutate(., Total = Yes + No, Yes = Yes/Total, No = No/Total) %>%
select(., Year, Yes, No, Total)
View(yearly_murders_by_solved_df)
runApp('Desktop/NYCDSA/Projects/ShinyMurderApp')
murder_database %>%
mutate(., Year = as.factor(Year)) %>%
group_by(., Year, State) %>%
summarise(., Murders = n()) %>%
spread(., key = State, value = Murders)
View(murder_database %>%
mutate(., Year = as.factor(Year)) %>%
group_by(., Year, State) %>%
summarise(., Murders = n()) %>%
spread(., key = State, value = Murders))
runApp('Desktop/NYCDSA/Projects/ShinyMurderApp')
runApp('Desktop/NYCDSA/Bootcamp Lectures/Lecture Slides/Data Analysis with R/4. Shiny/Intro to Shiny/flights/flights_final')
runApp('Desktop/NYCDSA/Bootcamp Lectures/Lecture Slides/Data Analysis with R/4. Shiny/Shiny Topics/shinyApps/shinyDashBoard')
runApp('Desktop/NYCDSA/Projects/ShinyMurderApp')
output$topmethod4 = renderInfoBox({})
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., State) %>%
summarise(., totalvictims = n(),
victimsper1kpeople = n()/mean(Population.in.1000s, na.rm = TRUE)) %>%
arrange(., victimsper1kpeople) %>%
top_n(., 5)
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., State) %>%
summarise(., totalvictims = n(),
victimsper1kpeople = n()/mean(Population.in.1000s, na.rm = TRUE)) %>% select(., State, victimsper1kpeople)
arrange(., victimsper1kpeople) %>%
top_n(., 5, victimsper1kpeople)
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., State) %>%
summarise(., totalvictims = n(),
victimsper1kpeople = n()/mean(Population.in.1000s, na.rm = TRUE)) %>% select(., State, victimsper1kpeople) %>%
arrange(., victimsper1kpeople) %>%
top_n(., 5, victimsper1kpeople)
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., State) %>%
summarise(., totalvictims = n(),
victimsper1kpeople = n()/mean(Population.in.1000s, na.rm = TRUE)) %>% select(., State, victimsper1kpeople) %>%
arrange(., desc(victimsper1kpeople)) %>%
top_n(., 5, victimsper1kpeople)
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., State) %>%
summarise(., totalvictims = n(),
victimsper1kpeople = n()/mean(Population.in.1000s, na.rm = TRUE)) %>% select(., State, victimsper1kpeople) %>%
top_n(., 5, desc(victimsper1kpeople))
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., State) %>%
summarise(., totalvictims = n(),
victimsper1kpeople = n()/mean(Population.in.1000s, na.rm = TRUE)) %>% select(., State, victimsper1kpeople) %>%
top_n(., 5, victimsper1kpeople, desc = T)
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., State) %>%
summarise(., totalvictims = n(),
victimsper1kpeople = n()/mean(Population.in.1000s, na.rm = TRUE)) %>% select(., State, victimsper1kpeople) %>%
arrange(., desc(victimsper1kpeople)) %>%
top_n(., 5)
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., Weapon) %>%
summarise(., victimsper1kpeople = n()/mean(Population.in.1000s, na.rm = TRUE)) %>%
arrange(., desc(victimsper1kpeople)) %>%
top_n(., 5)
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., Weapon) %>%
summarise(., totalvictims = n()) %>%
arrange(., desc(totalvictims)) %>%
top_n(., 5)
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., Weapon) %>%
summarise(., totalvictims = n()) %>%
arrange(., desc(totalvictims)) %>%
top_n(., 5)$totalvictims
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., Weapon) %>%
summarise(., totalvictims = n()) %>%
arrange(., desc(totalvictims)) %>%
top_n(., 5) %>% .$totalvictims
murder_database %>%
filter(., `Victim Sex` == "Male") %>%
filter(., State !="District of Columbia") %>% group_by(., Weapon) %>%
summarise(., totalvictims = n()) %>%
arrange(., desc(totalvictims)) %>%
top_n(., 5) %>% .$Weapon
runApp('Desktop/NYCDSA/Projects/ShinyMurderApp')
runApp('Desktop/NYCDSA/Projects/ShinyMurderApp')
?
?infoBox
?infoBox
runApp('Desktop/NYCDSA/Projects/ShinyMurderApp')
runApp('Desktop/NYCDSA/Projects/ShinyMurderApp')
setwd("~/Desktop/NYCDSA/Projects/epicurious")
library(data.table)
fread
?fread
epicurious = fread(file = "epicurious.csv", stringsAsFactors = F)
View(epicurious)
sum(is.na(epicurious$recipe))
library(data.table)
library(dplyr)
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
recipes$keywords = (sapply(recipes$keywords, function (x) unlist(strsplit(x, ","))))
View(recipes)
type(recipes$keywords)
class(recipes$keywords)
recipes$keywords = (sapply(recipes$keywords, function (x) strsplit(x, ",")))
View(recipes)
library(data.table)
library(dplyr)
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
recipes$keywords = (sapply(recipes$keywords, function (x) strsplit(x, ",")))
recipes %>% filter(., "Dinner" %in% keywords[[1]])
filtered_recipes = recipes %>% filter(., "Dinner" %in% keywords[[1]])
View(filtered_recipes)
filtered_recipes$keywords[2]
unlist(filtered_recipes$keywords[2])
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat) %>%
mutate(., keywords = unlist(keywords))
sapply(recipes$keywords, unlist)
lapply(recipes$keywords, unlist)
recipes$keywords = sapply(recipes$keywords, unlist)
class(recipes$keywords[1])
library(data.table)
library(dplyr)
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat) %>%
recipes$keywords = (sapply(recipes$keywords, function (x) strsplit(x, ",")))
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
View(recipes)
grep('Dinner', recipes$keywords[1])
rep('Dinner', recipes$keywords[1])
grep('Dinnerq', recipes$keywords[1])
View(recipes %>% filter(., grep('Dinner', keywords)))
recipes %>% filter(., grep('Dinner', keywords))
?grep
View(recipes %>% filter(., grepl('Dinner', keywords)))
View(recipes)
recipes$keywords = (sapply(recipes$keywords, function (x) strsplit(x, ",")))
View(filtered_recipes)
recipes$keywords[1]
unlist(recipes$keywords[1])
View(recipes)
recipes$keywords[1]
class(recipes$keywords[1])
paste(recipes$keywords[1], sep = " ")
class(paste(recipes$keywords[1], sep = " "))
collapse(recipes$keywords[1], sep = " ")
paste(recipes$keywords[1], collapse = " ")
unlist(recipes$kewyords[1])
unlist(recipes$keywords[1])
recipes %>% mutate(., keywords = keywords[[1]])
recipes %>% mutate(., keywords[1] = keywords[[1]])
library(data.table)
library(dplyr)
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
View(filter(recipes, grepl('Lunch', keywords, ignore.case = T)))
View(filter(recipes, grepl('Breakfast', keywords, ignore.case = T)))
View(filter(recipes, grepl('Snack', keywords, ignore.case = T)))
grepl('', recipes$keywords)
setwd("~/Desktop/NYCDSA/Projects/epicurious/epicurious_shiny")
setwd("~/Desktop/NYCDSA/Projects/epicurious")
library(data.table)
library(dplyr)
setwd("~/Desktop/NYCDSA/Projects/epicurious")
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
write.csv("./epicurious_shiny/data/recipes.csv")
write.csv(recipes, "./epicurious_shiny/data/recipes.csv")
?wwrite.csv
?write.csv
library(data.table)
library(dplyr)
setwd("~/Desktop/NYCDSA/Projects/epicurious")
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
write.csv(recipes, file = "./epicurious_shiny/data/recipes.csv")
#Import database
recipes = fread(file = "./data/recipes.csv", stringsAsFactors = F)
pwd
getwd
getwd()
#Import database
recipes = fread(file = "./epicurious_shiny/data/recipes.csv", stringsAsFactors = F)
rm(list=ls())
library(shiny)
library(shinydashboard)
library(data.table)
library(dplyr)
#Import database
recipes = fread(file = "./epicurious_shiny/data/recipes.csv", stringsAsFactors = F)
runApp('epicurious_shiny')
setwd("~/Desktop/NYCDSA/Projects/epicurious")
runApp('epicurious_shiny')
setwd("~/Desktop/NYCDSA/Projects/epicurious/epicurious_shiny")
runApp()
View(recipes)
View(recipes)
runApp()
recipe_df = recipes %>%
filter(., grepl('Dinner', keywords))
runApp()
grepl("", recpies$keywords[1])
grepl("", recipies$keywords[1])
grepl("", recipes$keywords[1])
runApp()
?selectizeInput
runApp()
filter(recipes, grepl('Chicken', ingredients))
View(filter(recipes, grepl('Chicken', ingredients)))
View(filter(recipes, grepl('Chicken', ingredients)) %>% filter(., grepl('olive oil', ingredients)))
View(filter(recipes, grepl('Chicken', ingredients)) %>% filter(., grepl('oil', ingredients)))
View(filter(recipes, grepl('Chicken', ingredients)) %>% filter(., grepl('oil', ingredients)) %>% filter(., grepl("truffle", ingredients)))
runApp()
recipes %>% filter(., grepl('Chicken', ingredients)) %>% filter(., grepl('Oil', ingredients)) %>% filter(., grepl('Truffle', ingredients))
recipes %>% filter(., grepl('Chicken', ingredients)) %>% filter(., grepl('Oil', ingredients))
recipes %>% filter(., grepl('Chicken', ingredients))
View(recipes %>% filter(., grepl('Chicken', ingredients)))
View(recipes %>% filter(., grepl('Chicken', ingredients)) %>% filter(., grepl('oil', ingredients)))
recipes %>% filter(., grepl('Chicken', ingredients)) %>% filter(., grepl('oil', ingredients))
recipes %>% filter(., grepl('Chicken', ingredients)) %>% filter(., grepl('Oil', ingredients))
View(recipes %>% filter(., grepl('Chicken', ingredients)) %>% filter(., grepl('oil', ingredients)))
recipes %>% filter(., grepl('Chicken', ingredients)) %>% filter(., grepl('Oil', ingredients))
recipes %>% filter(., grepl('Chicken', ingredients)) %>% filter(., grepl('oil', ingredients))
runApp()
recipe %>% select(., recipe, url = paste0("<a href='",  url, "'></a>"), rating)
View(recipes %>% select(., recipe, url = paste0("<a href='",  url, "'></a>"), rating))
recipes$url[1]
paste0("<a href='",recipes$url[1], "'></a>")
library(data.table)
library(dplyr)
setwd("~/Desktop/NYCDSA/Projects/epicurious")
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
recipes$url = paste0("<a href='",  recipes#url, "'></a>")
)
sapply(paste0("<a href='",  url, "'></a>"), recipe$urls)
sapply(paste0("<a href='",  url, "'></a>"), recipes$urls)
sapply(recipes$url, function(x) paste0("<a href='",  x, "'></a>"))
View(sapply(recipes$url, function(x) paste0("<a href='",  x, "'></a>")))
recipes$url = sapply(recipes$url, function(x) paste0("<a href='",  x, "'></a>"))
View(recipes)
write.csv(recipes, file = "./epicurious_shiny/data/recipes.csv")
library(data.table)
library(dplyr)
setwd("~/Desktop/NYCDSA/Projects/epicurious")
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
recipes$url = sapply(recipes$url, function(x) paste0("<a href='",  x, "'></a>"))
write.csv(recipes, file = "./epicurious_shiny/data/recipes.csv")
View(sapply(recipes$url, function(x) paste0("<a href='",  x, "'></a>")))
View(recipes)
#Import database
recipes = fread(file = "./data/recipes.csv", stringsAsFactors = F)
getwd()
#Import database
recipes = fread(file = "./epicurious_shiny/data/recipes.csv", stringsAsFactors = F)
View(recipes)
runApp('epicurious_shiny')
runApp('epicurious_shiny')
getwd()
#Import database
recipes = fread(file = "./epicurious_shiny/data/recipes.csv", stringsAsFactors = F)
runApp('epicurious_shiny')
setwd("~/Desktop/NYCDSA/Projects/epicurious/epicurious_shiny")
runApp()
library(data.table)
library(dplyr)
setwd("~/Desktop/NYCDSA/Projects/epicurious")
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
recipes$url = sapply(recipes$url, function(x) paste0("<a href='",  x, "'>",url,"</a>"))
write.csv(recipes, file = "./epicurious_shiny/data/recipes.csv")
setwd("~/Desktop/NYCDSA/Projects/epicurious")
library(data.table)
library(dplyr)
setwd("~/Desktop/NYCDSA/Projects/epicurious")
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
recipes$url = sapply(recipes$url, function(x) paste0("<a href='",  x, "'>", url ,"</a>"))
recipes$url = sapply(recipes$url, function(x) paste0("<a href='",  x, "'>", url, "</a>"))
recipes$url = sapply(recipes$url, function(x) paste0("<a href='",  x, "'>", x, "</a>"))
library(data.table)
library(dplyr)
setwd("~/Desktop/NYCDSA/Projects/epicurious")
recipes = fread("epicurious.csv", stringsAsFactors = F)
recipes = recipes %>%
select(., recipe, keywords, ingredients, url, rating, make_again, reviews, calories, carbs, protein, fat)
recipes$url = sapply(recipes$url, function(x) paste0("<a href='",  x, "'>", x, "</a>"))
write.csv(recipes, file = "./epicurious_shiny/data/recipes.csv")
setwd("~/Desktop/NYCDSA/Projects/epicurious/epicurious_shiny")
runApp()
runApp()
